{"version":3,"sources":["Shuffle.js","Card.js","App.js","index.js"],"names":["Shuffle","state","data","error","axiosData","bind","this","prevProps","props","numberOfPlayer","axios","method","url","headers","player","then","result","console","log","setState","catch","validData","map","getData","key","id","className","React","Component","Card","input","validInput","errorData","getPlayer","test","playerInput","value","ifValidInput","ifError","style","color","type","ref","c","required","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"sTA8DeA,E,YAzDX,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTC,KAAM,GACNC,OAAQ,GAEZ,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBANR,E,iFAUXC,KAAKF,c,yCAGYG,GAEXD,KAAKE,MAAMC,iBAAmBF,EAAUE,gBACxCH,KAAKF,c,kCAID,IAAD,OACPM,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OA1BE,kBA2BLC,QAAS,CAAE,eAAgB,oBAC3BX,KAAM,CAAEY,OAASR,KAAKE,MAAMC,kBAE3BM,KAAK,SAAAC,GAEJC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVjB,KAAMc,EAAOd,KACbC,OAAO,MAIZiB,MAAM,SAAAjB,GACHc,QAAQC,IAAIf,GAEZ,EAAKgB,SAAS,CACVhB,OAAO,Q,+BAOnB,IAAMkB,EAAY,iCAAOf,KAAKL,MAAMC,KAAKoB,IAAI,SAACC,GAAD,OAAe,yBAAKC,IAAOD,EAAQE,GAAIC,UAAU,QAAO,2BAAIH,EAAQrB,MAArD,OAA1C,KAElB,OACI,6BACSI,KAAKL,MAAME,MAAsB,KAAZkB,O,GApDpBM,IAAMC,WCsDbC,E,YArDX,aAAc,IAAD,8BACT,+CACK5B,MAAO,CACR6B,MAAO,GACPC,YAAa,EACb5B,OAAQ,EACR6B,UAAY,IAGhB,EAAKC,UAAY,EAAKA,UAAU5B,KAAf,gBATR,E,yEAcW,SACH6B,KAAK5B,KAAK6B,YAAYC,QAM/B9B,KAAKL,MAAME,OACXG,KAAKa,SAAS,CACVhB,OAAO,EACP6B,UAAY,KAGpB1B,KAAKa,SAAS,CACVW,MAAQxB,KAAK6B,YAAYC,MACzBL,YAAa,KAbjBzB,KAAKa,SAAS,CACVhB,OAAO,EACP6B,UAAY,qD,+BAef,IAAD,OACEK,EAAe,mDAAyB/B,KAAKL,MAAM6B,OACnDQ,EAAU,wBAAIC,MAAS,CAACC,MAAO,QAASlC,KAAKL,MAAM+B,WACzD,OACI,6BACE,uDACE,2BAAON,UAAY,aAAae,KAAK,SAASC,IAAK,SAACC,GAAD,OAAO,EAAKR,YAAcQ,GAAIC,UAAQ,KACtFtC,KAAKL,MAAME,MAAQmC,GACtB,6BACA,4BACIG,KAAK,SAASI,QAASvC,KAAK2B,UAAWG,MAAQ,UADnD,UAGA9B,KAAKL,MAAM8B,WAAcM,EAAgB,KACxC/B,KAAKL,MAAM8B,WAAc,kBAAC,EAAD,CAAStB,eAAkBH,KAAKL,MAAM6B,QAAY,U,GA/CzEH,IAAMC,WCSVkB,MARf,WACE,OACE,yBAAKpB,UAAU,OACb,kBAAC,EAAD,QCFNqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.589495d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nconst API_PATH = '/api/index.php';\r\n\r\nclass Shuffle extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            data: [],\r\n            error : false\r\n        }\r\n        this.axiosData = this.axiosData.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.axiosData()\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n        if (this.props.numberOfPlayer !== prevProps.numberOfPlayer) {\r\n            this.axiosData()\r\n          }\r\n    }\r\n\r\n    axiosData(){\r\n        axios({\r\n            method: 'post',\r\n            url: `${API_PATH}`,\r\n            headers: { 'content-type': 'application/json' },\r\n            data: { player : this.props.numberOfPlayer }\r\n        })\r\n            .then(result => {\r\n            \r\n              console.log(result);\r\n              this.setState({\r\n                  data: result.data,\r\n                  error: false\r\n              })\r\n              \r\n            })\r\n            .catch(error => {\r\n                console.log(error) \r\n               \r\n                this.setState({\r\n                    error: true\r\n\r\n                })\r\n            });\r\n    }\r\n\r\n    render(){\r\n        const validData = <div> {this.state.data.map((getData) => ( <div key = {getData.id} className=\"card\"><p>{getData.data}</p> </div>))} </div>\r\n\r\n        return(\r\n            <div>\r\n                { ( !this.state.error ) ? validData : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shuffle","import React from 'react';\r\nimport Shuffle from './Shuffle';\r\n\r\n\r\nclass Card extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            input: '',\r\n            validInput : false,\r\n            error : false,\r\n            errorData : ''\r\n        }\r\n\r\n        this.getPlayer = this.getPlayer.bind(this)\r\n        \r\n    }\r\n\r\n    getPlayer(){\r\n        const regexNumber = /^[1-9]/\r\n        if( !regexNumber.test(this.playerInput.value) ){\r\n            this.setState({\r\n                error: true,\r\n                errorData : 'Input value does not exist or value is invalid'\r\n            })\r\n        }else{\r\n            if( this.state.error ){\r\n                this.setState({\r\n                    error: false,\r\n                    errorData : ''\r\n                })\r\n            }\r\n            this.setState({\r\n                input : this.playerInput.value,\r\n                validInput : true\r\n            })\r\n        }    \r\n    }\r\n    render(){\r\n        const ifValidInput = <h5>Number of players : {this.state.input}</h5>\r\n        const ifError = <h5 style = {{color: \"red\"}}>{this.state.errorData}</h5>\r\n        return (\r\n            <div>\r\n              <h3>Enter Number of Players</h3>\r\n                <input className = 'input-name' type=\"number\" ref={(c) => this.playerInput = c}  required />\r\n                { (this.state.error)? ifError  : ifError }\r\n                <br/>\r\n                <button\r\n                    type=\"button\" onClick={this.getPlayer} value = 'submit'\r\n                >Submit</button>\r\n              {(this.state.validInput) ? ifValidInput  : null}\r\n              { (this.state.validInput) ? <Shuffle numberOfPlayer = {this.state.input} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Card","import React from 'react';\nimport './App.css';\nimport Card from './Card';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}