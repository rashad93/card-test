{"version":3,"sources":["Shuffle.js","Card.js","App.js","index.js"],"names":["Shuffle","state","data","error","errorData","axiosData","bind","this","prevProps","props","numberOfPlayer","axios","method","url","headers","player","then","result","console","log","setState","catch","validData","map","getData","key","id","className","irregular","React","Component","Card","input","validInput","irregularityData","irregularity","getPlayer","test","playerInput","value","ifValidInput","ifError","style","color","ifIrregular","type","ref","c","required","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"sTAgEeA,E,YA3DX,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTC,KAAM,GACNC,OAAQ,EACRC,UAAY,IAEhB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPR,E,iFAWXC,KAAKF,c,yCAGYG,GAEXD,KAAKE,MAAMC,iBAAmBF,EAAUE,gBACxCH,KAAKF,c,kCAID,IAAD,OACPM,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OA3BE,kBA4BLC,QAAS,CAAE,eAAgB,oBAC3BZ,KAAM,CAAEa,OAASR,KAAKE,MAAMC,kBAE3BM,KAAK,SAAAC,GAEJC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVlB,KAAMe,EAAOf,KACbC,OAAO,MAIZkB,MAAM,SAAAlB,GACHe,QAAQC,IAAIhB,GAEZ,EAAKiB,SAAS,CACVjB,OAAO,EACPC,UAAY,6B,+BAMxB,IAAMkB,EAAY,iCAAOf,KAAKN,MAAMC,KAAKqB,IAAI,SAACC,GAAD,OAAe,yBAAKC,IAAOD,EAAQE,GAAIC,UAAU,QAAO,2BAAIH,EAAQtB,MAArD,OAA1C,KACZ0B,EAAY,+BAAMrB,KAAKN,MAAMG,UAAjB,KAClB,OACI,6BACOG,KAAKN,MAAME,MAASyB,EAAY,KAC9BrB,KAAKN,MAAME,MAAsB,KAAZmB,O,GAtDpBO,IAAMC,WCqEbC,E,YApEX,aAAc,IAAD,8BACT,+CACK9B,MAAO,CACR+B,MAAO,GACPC,YAAa,EACb9B,OAAQ,EACRC,UAAY,GACZ8B,iBAAkB,GAClBC,cAAe,GAGnB,EAAKC,UAAY,EAAKA,UAAU9B,KAAf,gBAXR,E,yEAgBW,SACH+B,KAAK9B,KAAK+B,YAAYC,QAO/BhC,KAAKN,MAAME,OACXI,KAAKa,SAAS,CACVjB,OAAO,EACPC,UAAY,KAGpBG,KAAKa,SAAS,CACVY,MAAQzB,KAAK+B,YAAYC,MACzBN,YAAa,IAIb1B,KAAK+B,YAAYC,MAAQ,IACzBhC,KAAKa,SAAS,CACVc,iBAAkB,oFAClBC,cAAe,KArBvB5B,KAAKa,SAAS,CACVjB,OAAO,EACPC,UAAY,qD,+BAyBf,IAAD,OACEoC,EAAe,mDAAyBjC,KAAKN,MAAM+B,OACnDS,EAAU,wBAAIC,MAAS,CAACC,MAAO,QAASpC,KAAKN,MAAMG,WACnDwC,EAAc,+BAAKrC,KAAKN,MAAMiC,iBAAhB,KAEpB,OACI,6BACE,uDACE,2BAAOP,UAAY,aAAakB,KAAK,SAASC,IAAK,SAACC,GAAD,OAAO,EAAKT,YAAcS,GAAIC,UAAQ,KACtFzC,KAAKN,MAAMkC,aAAeS,IAC1BrC,KAAKN,MAAME,MAAQsC,GACtB,6BACA,4BACII,KAAK,SAASI,QAAS1C,KAAK6B,UAAWG,MAAQ,UADnD,UAGAhC,KAAKN,MAAMgC,WAAcO,EAAgB,KACxCjC,KAAKN,MAAMgC,WAAc,kBAAC,EAAD,CAASvB,eAAkBH,KAAKN,MAAM+B,QAAY,U,GA9DzEH,IAAMC,WCSVoB,MARf,WACE,OACE,yBAAKvB,UAAU,OACb,kBAAC,EAAD,QCFNwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a3077495.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nconst API_PATH = '/api/index.php';\r\n\r\nclass Shuffle extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            data: [],\r\n            error : false,\r\n            errorData : ''\r\n        }\r\n        this.axiosData = this.axiosData.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.axiosData()\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n        if (this.props.numberOfPlayer !== prevProps.numberOfPlayer) {\r\n            this.axiosData()\r\n          }\r\n    }\r\n\r\n    axiosData(){\r\n        axios({\r\n            method: 'post',\r\n            url: `${API_PATH}`,\r\n            headers: { 'content-type': 'application/json' },\r\n            data: { player : this.props.numberOfPlayer }\r\n        })\r\n            .then(result => {\r\n            \r\n              console.log(result);\r\n              this.setState({\r\n                  data: result.data,\r\n                  error: false\r\n              })\r\n              \r\n            })\r\n            .catch(error => {\r\n                console.log(error) \r\n               \r\n                this.setState({\r\n                    error: true,\r\n                    errorData : 'Irregularity occured'\r\n                })\r\n            });\r\n    }\r\n\r\n    render(){\r\n        const validData = <div> {this.state.data.map((getData) => ( <div key = {getData.id} className=\"card\"><p>{getData.data}</p> </div>))} </div>\r\n        const irregular = <p> { this.state.errorData } </p>\r\n        return(\r\n            <div>\r\n                { (this.state.error) ? irregular : null }\r\n                { ( !this.state.error ) ? validData : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shuffle","import React from 'react';\r\nimport Shuffle from './Shuffle';\r\n\r\n\r\nclass Card extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            input: '',\r\n            validInput : false,\r\n            error : false,\r\n            errorData : '',\r\n            irregularityData: '',\r\n            irregularity : false\r\n        }\r\n\r\n        this.getPlayer = this.getPlayer.bind(this)\r\n        \r\n    }\r\n\r\n    getPlayer(){\r\n        const regexNumber = /^[1-9]/\r\n        if( !regexNumber.test(this.playerInput.value) ){\r\n            this.setState({\r\n                error: true,\r\n                errorData : 'Input value does not exist or value is invalid'\r\n            })\r\n        }else{\r\n            //toggle back the error to false\r\n            if( this.state.error ){\r\n                this.setState({\r\n                    error: false,\r\n                    errorData : ''\r\n                })\r\n            }\r\n            this.setState({\r\n                input : this.playerInput.value,\r\n                validInput : true\r\n            })\r\n\r\n            //check if the number is more than 52 which is the total card\r\n            if( this.playerInput.value > 52 ){\r\n                this.setState({\r\n                    irregularityData: 'Irregular number, a total of 52 cards will be distributed to the first 52 players',\r\n                    irregularity : true\r\n                })\r\n            }\r\n\r\n        }    \r\n    }\r\n    render(){\r\n        const ifValidInput = <h5>Number of players : {this.state.input}</h5>\r\n        const ifError = <h5 style = {{color: \"red\"}}>{this.state.errorData}</h5>\r\n        const ifIrregular = <p> {this.state.irregularityData} </p>\r\n\r\n        return (\r\n            <div>\r\n              <h3>Enter Number of Players</h3>\r\n                <input className = 'input-name' type=\"number\" ref={(c) => this.playerInput = c}  required />\r\n                { (this.state.irregularity)? ifIrregular  : ifIrregular }\r\n                { (this.state.error)? ifError  : ifError }\r\n                <br/>\r\n                <button\r\n                    type=\"button\" onClick={this.getPlayer} value = 'submit'\r\n                >Submit</button>\r\n              {(this.state.validInput) ? ifValidInput  : null}\r\n              { (this.state.validInput) ? <Shuffle numberOfPlayer = {this.state.input} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Card","import React from 'react';\nimport './App.css';\nimport Card from './Card';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}